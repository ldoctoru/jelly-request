name: Docker Publish (Manual)

on:
  workflow_dispatch:
    inputs:
      is_4k_request:
        description: 'Enable 4K requests (true/false)'
        required: false
        default: 'true'
      auto_approve:
        description: 'Auto-approve requests (true/false)'
        required: false
        default: 'true'
      use_jwt:
        description: 'Use JWT login instead of API key (true/false)'
        required: false
        default: 'false'
      user_email:
        description: 'Email for JWT login (required if use_jwt=true)'
        required: false
        default: ''
      user_password:
        description: 'Password for JWT login (required if use_jwt=true)'
        required: false
        default: ''
      docker_tag:
        description: 'Docker image tag (e.g., latest, v1.0.0)'
        required: true
        default: 'latest'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ github.event.inputs.docker_tag }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            IS_4K_REQUEST=${{ github.event.inputs.is_4k_request }}
            AUTO_APPROVE=${{ github.event.inputs.auto_approve }}
            USE_JWT=${{ github.event.inputs.use_jwt }}
            USER_EMAIL=${{ github.event.inputs.user_email }}
            USER_PASSWORD=${{ github.event.inputs.user_password }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the Docker image
        uses: sigstore/cosign-installer@v3
        if: ${{ success() }}

      - name: Cosign image signature
        if: ${{ success() }}
        env:
          COSIGN_EXPERIMENTAL: "true"
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
